--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2 (Debian 17.2-1.pgdg120+1)
-- Dumped by pg_dump version 17.2 (Debian 17.2-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: card; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.card (
    number character varying(16) NOT NULL,
    expiry_month integer NOT NULL,
    expiry_year integer NOT NULL,
    card_type character varying(32) NOT NULL,
    code integer NOT NULL,
    name character varying(32) NOT NULL,
    issuer_country character varying(32) NOT NULL,
    issuer_name_id integer NOT NULL
);


ALTER TABLE public.card OWNER TO docker;

--
-- Name: currency; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.currency (
    id integer NOT NULL,
    title character varying(16) NOT NULL,
    definition character varying(64)
);


ALTER TABLE public.currency OWNER TO docker;

--
-- Name: currencies_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.currency ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.currencies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: issuer_name; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.issuer_name (
    issuer_name character varying(32) NOT NULL,
    id integer NOT NULL
);


ALTER TABLE public.issuer_name OWNER TO docker;

--
-- Name: issuer_name_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.issuer_name ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.issuer_name_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: payment; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.payment (
    uuid character varying(64) NOT NULL,
    status_id integer NOT NULL,
    paid boolean NOT NULL,
    amount character varying(16) NOT NULL,
    currency_id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    expired_at timestamp without time zone NOT NULL,
    description character varying(64),
    paymnent_type_id integer NOT NULL,
    card_number character varying(16) NOT NULL,
    recepient_account_number character varying(32) NOT NULL,
    refundable boolean NOT NULL,
    test boolean NOT NULL,
    income character varying(32) NOT NULL
);


ALTER TABLE public.payment OWNER TO docker;

--
-- Name: payment_type; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.payment_type (
    id integer NOT NULL,
    type character varying(32) NOT NULL
);


ALTER TABLE public.payment_type OWNER TO docker;

--
-- Name: payment_type_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.payment_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.payment_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: recepient; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.recepient (
    account_number character varying(32) NOT NULL,
    title character varying(32)
);


ALTER TABLE public.recepient OWNER TO docker;

--
-- Name: status; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.status (
    id integer NOT NULL,
    status character varying(64)
);


ALTER TABLE public.status OWNER TO docker;

--
-- Name: statuses_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.status ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.statuses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: card; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.card (number, expiry_month, expiry_year, card_type, code, name, issuer_country, issuer_name_id) VALUES
\.


--
-- Data for Name: currency; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.currency (id, title, definition) VALUES
(2,	'RUB',	'russian ruble'),
(3,	'BUN',	'\N');



--
-- Data for Name: issuer_name; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.issuer_name (issuer_name, id) VALUES
('sberbank',	1),
('t-bank',	2);
\.


--
-- Data for Name: payment; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.payment (uuid, status_id, paid, amount, currency_id, created_at, expired_at, description, paymnent_type_id, card_number, recepient_account_number, refundable, test, income) VALUES
\.


--
-- Data for Name: payment_type; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.payment_type (id, type) VALUES
(1,	'SBP'),
(2,	'bank_card');
\.


--
-- Data for Name: recepient; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.recepient (account_number, title) VALUES
(123456789,	'ИП Анастасия');
\.


--
-- Data for Name: status; Type: TABLE DATA; Schema: public; Owner: docker
--

INSERT INTO public.status (id, status) VALUES
(1,	'created'),
(2,	'inProcess'),
(3,	'success'),
(4,	'failed');
\.


--
-- Name: currencies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: docker
--

SELECT pg_catalog.setval('public.currencies_id_seq', 3, true);


--
-- Name: issuer_name_id_seq; Type: SEQUENCE SET; Schema: public; Owner: docker
--

SELECT pg_catalog.setval('public.issuer_name_id_seq', 2, true);


--
-- Name: payment_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: docker
--

SELECT pg_catalog.setval('public.payment_type_id_seq', 2, true);


--
-- Name: statuses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: docker
--

SELECT pg_catalog.setval('public.statuses_id_seq', 4, true);


--
-- Name: card card_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.card
    ADD CONSTRAINT card_pk PRIMARY KEY (number);


--
-- Name: currency currencies_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.currency
    ADD CONSTRAINT currencies_pk PRIMARY KEY (id);


--
-- Name: issuer_name issuer_name_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.issuer_name
    ADD CONSTRAINT issuer_name_pk PRIMARY KEY (id);


--
-- Name: payment payment_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_pk PRIMARY KEY (uuid);


--
-- Name: payment_type payment_type_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment_type
    ADD CONSTRAINT payment_type_pk PRIMARY KEY (id);


--
-- Name: recepient recepient_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.recepient
    ADD CONSTRAINT recepient_pk PRIMARY KEY (account_number);


--
-- Name: status statuses_pk; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.status
    ADD CONSTRAINT statuses_pk PRIMARY KEY (id);


--
-- Name: card card_issuer_name_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.card
    ADD CONSTRAINT card_issuer_name_id_fk FOREIGN KEY (issuer_name_id) REFERENCES public.issuer_name(id);


--
-- Name: payment payment_card_number_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_card_number_fk FOREIGN KEY (card_number) REFERENCES public.card(number);


--
-- Name: payment payment_currency_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_currency_id_fk FOREIGN KEY (currency_id) REFERENCES public.currency(id);


--
-- Name: payment payment_payment_type_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_payment_type_id_fk FOREIGN KEY (paymnent_type_id) REFERENCES public.payment_type(id);


--
-- Name: payment payment_recepient_account_number_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_recepient_account_number_fk FOREIGN KEY (recepient_account_number) REFERENCES public.recepient(account_number);


--
-- Name: payment payment_status_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_status_id_fk FOREIGN KEY (status_id) REFERENCES public.status(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

